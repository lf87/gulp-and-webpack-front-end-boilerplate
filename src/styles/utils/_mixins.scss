@function calculateRem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}

@mixin font-size($size, $line: $size * 1.5) {
  font-size: $size;
  line-height: $line;
  font-size: calculateRem($size);
}

// Fonts
// 400, 400i, and 700
@mixin libre($weight: 400, $style: normal) {
  font-family: 'Libre Baskerville', serif;
  font-weight: $weight;
}

// 400, and 600
@mixin sofia($weight: 400, $style: normal) {
  font-family: 'sofia-pro', sans-serif;
  font-weight: $weight;
  font-style: $style;
}

// Font smoothing
@mixin font-smoothing($value: antialiased) {
  @if $value==antialiased {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  }
  @else {
    -moz-osx-font-smoothing: auto;
    -webkit-font-smoothing: subpixel-antialiased;
  }
}

// Mobile first Breakpoints
@mixin bp-xl {
  @media only screen and (min-width: $bp-xl) {
    @content;
  }
}

@mixin bp-lg {
  @media only screen and (min-width: $bp-lg) {
    @content;
  }
}

@mixin bp-md {
  @media only screen and (min-width: $bp-md) {
    @content;
  }
}

@mixin bp-sm {
  @media only screen and (min-width: $bp-sm) {
    @content;
  }
}

@mixin bp-xs {
  @media only screen and (min-width: $bp-xs) {
    @content;
  }
}

// Misc Breakpoints
@mixin bp-height-xs {
  @media only screen and (max-height: 400px) {
    @content;
  }
}

@mixin bp-height-sm {
  @media only screen and (max-height: 550px) {
    @content;
  }
}

@mixin bp-height-md {
  @media only screen and (max-height: 768px) {
    @content;
  }
}

@mixin bp-height-lg {
  @media only screen and (max-height: 992px) {
    @content;
  }
}

@mixin bp-height-xl {
  @media only screen and (max-height: 1200px) {
    @content;
  }
}

@mixin bp-height-hd {
  @media only screen and (max-height: 1441px) {
    @content;
  }
}

@mixin bp-horizontal {
  @media only screen and (max-height: 550px) and (max-width: 767px) {
    @content;
  }
}

// Clearfix
@mixin clearfix {
  &::before,
  &::after {
    content: '';
    display: table;
  }
  &::after {
    clear: both;
  }
}

// Visually hide an element
@mixin visually-hidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

// Full width
@mixin full-width {
  display: flex;
  width: 100%;
  position: relative;
}

// Remove tap highlight on touch devices
@mixin remove-highlight {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0) !important;
  -webkit-tap-highlight-color: transparent !important;
  outline: none;
}

// Add brightness filter on hover/active
@mixin hover-brightness {
  will-change: filter;
  transition: filter 0.25s ease;
  &:hover,
  &:active {
    filter: brightness(1.05);
  }
}
